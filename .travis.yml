language: cpp
dist: trusty

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-trusty-5.0
    packages:
    - clang-5.0
    - clang-tidy-5.0
    - gcc-8
    - g++-8
    
before_script:
- mkdir build
- cd build

#
# Update / Install CMake
#
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    mkdir -p external/cmake
    pushd external/cmake
    wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
    chmod +x cmake-*-Linux-x86_64.sh
    ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
    export PATH="${PWD}/bin:$PATH"
    popd
  else
    if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
  fi
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    wget https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip
    unzip -q ninja-linux.zip -d build
    export PATH="$PWD/build:$PATH"
  fi

before_install:
  - pip install --user cpp-coveralls

jobs:  
  include:
    - stage: "Tests"         
      name: "Unit Tests"
      script: 
      - export CXX=/usr/bin/g++-8
      - export CC=/usr/bin/gcc-8
      - cmake .. -DBUILD_TESTS=ON -GNinja
      - ninja run_eul_ut
    - stage: "Coverage"
      name: "Build"
      script:
      - export CXX=/usr/bin/g++-8
      - export CC=/usr/bin/gcc-8
      - cmake .. -DBUILD_TESTS=ON -DTEST_COVERAGE=ON -DDEBUG=ON -GNinja
      - ninja run_eul_ut 
      after_success:
      - coveralls -b . --exclude lib --exclude tests --gcov-options '\-lp'
